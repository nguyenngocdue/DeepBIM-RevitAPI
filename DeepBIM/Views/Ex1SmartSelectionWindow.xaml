<Window x:Class="DeepBIM.Views.Ex1SmartSelectionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="DeepBIM - Smart Selection"
        Height="885"
        Width="1075"
        MinWidth="800"
        MinHeight="600"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        Icon="/DeepBIM;component/Resources/Icons/logo.png"
        >

    <!-- ===== THEME ===== -->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles/Styles.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/ComboboxStyle.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/TextBlockStyle.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/DataGridStyle.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/CheckBoxStyle.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/SliderStyle.xaml"/>
                <ResourceDictionary Source="../Resources/Styles/ColorSwatchStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Resources -->
            <sys:Double x:Key="ElementSpacing">12</sys:Double>
            <Thickness x:Key="FieldMargin">0,0,0,12</Thickness>
            <Thickness x:Key="GroupMargin">0,0,12,20</Thickness>
            <Duration x:Key="AnimationDuration">0:00:0.2</Duration>
            <Color x:Key="HoverColor">#42A5F5</Color>
            <Color x:Key="SelectedColor">#1976D2</Color>
            <Color x:Key="AccentColor">#0288D1</Color>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Margin="24">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- ===== HEADER ===== -->
        <Grid Grid.Row="0" Margin="0,0,0,24">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!-- Title and Icon -->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <Path Data="M12,2C6.48,2,2,6.48,2,12s4.48,10,10,10s10-4.48,10-10S17.52,2,12,2z M17,13h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"
                      Fill="{DynamicResource Accent}"
                      Width="28" Height="28" Margin="0,0,12,0"/>
                <TextBlock Text="Smart Selection"
                           Style="{StaticResource TextHeader}"
                           FontSize="22"
                           FontWeight="Bold"
                           VerticalAlignment="Center"/>
            </StackPanel>
            <!-- Presets -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center"/>
        </Grid>

        <!-- ===== MAIN CONTENT ===== -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="64"/>
                <ColumnDefinition Width="2.5*"/>
            </Grid.ColumnDefinitions>

            <!-- === LEFT COLUMN: Categories === -->
            <Border Grid.RowSpan="1" Style="{StaticResource Card}" Margin="0 0 12 0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Border Style="{StaticResource HeaderBar}">
                        <TextBlock Text="All Categories" Foreground="White" FontWeight="SemiBold"/>
                    </Border>

                    <TextBox Grid.Row="1" 
                         Style="{StaticResource WatermarkTextBox}"
                         Tag="🔎  Search Category. Press Enter to apply search."
                         Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                         Margin="0,10,0,8">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding SearchCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>

                    <Border Grid.Row="2" 
                    BorderBrush="{StaticResource CardBorder}" 
                    BorderThickness="1" 
                    CornerRadius="6" 
                    Padding="6">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Select all -->
                            <CheckBox 
                                Style="{StaticResource ModernCheckBox}"
                                Content=" - Select all Categories - "
                                IsChecked="{Binding SelectAll, Mode=TwoWay}"
                                Margin="6 0 0 8"
                                />

                            <!-- List populated from ViewModel -->
                            <ListBox Grid.Row="1"
                 ItemsSource="{Binding CategoryView}"
                 BorderThickness="0">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Margin="6 0"/>
                                            <TextBlock Text="{Binding Display}" VerticalAlignment="Center" Margin="6 0"/>
                                        </DockPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </Border>
                </Grid>
            </Border>


            <!-- MIDDLE: round buttons -->
            <StackPanel Grid.Column="1" Grid.Row="0" VerticalAlignment="Center">
                <!-- MoveToRightCommand -->
                <Button 
              ToolTip="Move to processing list"
              Command="{Binding MoveToRightCommand}"
              Style="{StaticResource IconButton}" Content="&#xE110;" RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="90"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>

                <!-- MoveToLeftCommand -->
                <Button
              Style="{StaticResource IconButton}" Content="&#xE110;" ToolTip="Move left" RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="-90"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Button.RenderTransform>
                </Button>
                <Button Command="{Binding RefreshCommand}" Style="{StaticResource IconButton}" Content="&#xE72C;" ToolTip="Refresh list"/>

                <Button Style="{StaticResource IconButton}"
              Content="&#xE74D;"
              ToolTip="Delete selected rows"
              Command="{Binding DeleteSelectedSheetsCommand}" />
            </StackPanel>


            <!-- === RIGHT COLUMN: MAKE COLORS === -->
            <Border  Grid.Column="2"  Style="{StaticResource Card}" Margin="0 0 12 0">
                <StackPanel >
                    <TextBlock Text="Select fill color:" FontWeight="SemiBold" Margin="0,0,0,5"/>

                    <!-- ColorPicker -->
                    <xctk:ColorPicker
                             SelectedColor="{Binding SelectedColor, Mode=TwoWay}"
                            DisplayColorAndName="True"
                            UsingAlphaChannel="False"
                            AvailableColorsSortingMode="HueSaturationBrightness"
                            ShowStandardColors="False"
                            ShowAvailableColors="True"
                            ShowRecentColors="True"
                            Margin="0,0,0,10"
                            Width="220"
                            Background="White"
                            BorderBrush="#D0D5DD"
                            BorderThickness="1"
                            Padding="6"
                            FontSize="13"
                            Foreground="#344054"/>

                    <!-- Transparency -->
                    <TextBlock Text="Transparency (0–90):" Margin="0,0,0,5"/>
                    <Slider 
                                Style="{StaticResource ModernSlider}"
                                Minimum="0" 
                                Maximum="90" 
                                TickFrequency="10" 
                                IsSnapToTickEnabled="True"
                                Value="{Binding SelectedTransparency, Mode=TwoWay}" />
                    <TextBlock Text="{Binding SelectedTransparency, StringFormat='Transparency: {0}%'}"
                                    Margin="0,4,0,10" Foreground="#555"/>

                    <!-- Halftone -->
                    <CheckBox 
                            Content="Halftone" 
                            Style="{StaticResource ModernCheckBox}"
                            IsChecked="{Binding IsHalftone, Mode=TwoWay}" 
                            Margin="0,0,0,10"
                        />

                    <!-- Buttons -->
                    <StackPanel Orientation="Horizontal" >
                        <!-- Apply - Colorize Categories -->
                        <Button Command="{Binding ApplyColorCommand}"
                                  Style="{StaticResource UpdateFilledButton}"
                                  Padding="10 6"
                                  Margin="0,0,8,0">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <!-- Icon: bảng màu -->
                                <TextBlock Text="🎨" FontSize="14" Margin="0,0,6,0" VerticalAlignment="Center"/>
                                <TextBlock Text="Apply - Colorize Categories" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>

                        <!-- Clear - Reset Overrides -->
                        <Button Command="{Binding ClearOverridesCommand}"
                                  Style="{StaticResource WarningFilledButton}"
                                  Padding="10 6">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <!-- Icon: cảnh báo / reset -->
                                <TextBlock Text="⚠" FontSize="14" Margin="0,0,6,0" VerticalAlignment="Center"/>
                                <TextBlock Text="Clear - Reset Overrides" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Border>

        </Grid>



        <Border Grid.Row="2" Style="{StaticResource Card}" Margin="0 10 12 0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Style="{StaticResource HeaderBar}">
                    <TextBlock Text="Processing (colored categories)" Foreground="White" FontWeight="SemiBold"/>
                </Border>
                <StackPanel Grid.Row="1" Margin="10">
                    <!-- Processing table -->


                    <!-- HEADER -->
                    <Border Style="{StaticResource HeaderBar}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48"/>
                                <!-- No. -->
                                <ColumnDefinition Width="*"/>
                                <!-- Category -->
                                <ColumnDefinition Width="90"/>
                                <!-- Amount -->
                                <ColumnDefinition Width="110"/>
                                <!-- Color -->
                                <ColumnDefinition Width="90"/>
                                <!-- Isolate -->
                                <ColumnDefinition Width="88"/>
                                <!-- Highlight -->
                                <ColumnDefinition Width="70"/>
                                <!-- Edit -->
                                <ColumnDefinition Width="80"/>
                                <!-- Reset -->
                                <ColumnDefinition Width="84"/>
                                <!-- Delete -->
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="No."
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="1" Text="Category"
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="2" Text="Amount"
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="3" Text="Color"
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="4" Text="Isolate"
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="5" Text="Highlight"
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="6" Text="Edit"
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="7" Text="Reset"
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="8" Text="Delete"
                   Foreground="White" FontWeight="SemiBold"
                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <!-- DATAGRID -->
                    <DataGrid
                          Grid.Row="1"
                          ItemsSource="{Binding ProcessingRows}"
                          AutoGenerateColumns="False"
                          HeadersVisibility="None"
                          CanUserAddRows="False"
                          RowHeaderWidth="0"
                          MinHeight="220"
                          MaxHeight="320"
                          AlternatingRowBackground="#FFF7F7F7"
                          Background="White"
                          BorderBrush="#D0D5DD"
                          BorderThickness="1">
                        <DataGrid.Resources>
                            <!-- Header rõ ràng -->
                            <Style TargetType="DataGridColumnHeader">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Setter Property="Height" Value="28"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="Background" Value="#F5F7FA"/>
                                <Setter Property="BorderBrush" Value="#D0D5DD"/>
                                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                <Setter Property="Padding" Value="8,0,8,0"/>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="No." Width="48"
                            Binding="{Binding RowIndex}"/>

                            <DataGridTextColumn Header="Category" Width="*"
                            Binding="{Binding CategoryName}"/>

                            <DataGridTextColumn Header="Amount" Width="90"
                            Binding="{Binding Amount}"/>

                            <DataGridTemplateColumn Header="Color" Width="110">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Width="28" Height="16" CornerRadius="3"
                            BorderBrush="#D0D5DD" BorderThickness="1" Margin="0,0,6,0"
                            Background="{Binding ColorBrush}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Isolate" Width="90">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ToggleButton
                                            Content="{Binding IsIsolated, Converter={StaticResource BoolToOnOffTextConverter}, FallbackValue=Toggle}"
                                            IsChecked="{Binding IsIsolated, Mode=TwoWay}"
                                            Command="{Binding DataContext.ToggleIsolateCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding}"/>  
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Highlight" Width="88">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Highlight"
                                            Command="{Binding DataContext.HighlightCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Edit" Width="70">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Edit"
                                            Command="{Binding DataContext.EditColorCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Reset" Width="80">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Reset"
                            Command="{Binding DataContext.ResetRowCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                            CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Delete" Width="84">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Delete"
                            Command="{Binding DataContext.DeleteRowCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                            CommandParameter="{Binding}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Grid>
        </Border>




        <!-- ===== CONTROL BUTTONS ===== -->
        <StackPanel Grid.Row="3"
            Orientation="Horizontal"
            HorizontalAlignment="Right"
            Margin="0,24,0,0">

            <!-- Cancel button -->
            <Button Style="{StaticResource CancelButton}"
            Width="120"
            Margin="0,0,12,0"
            Click="CancelButton_Click">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!-- Icon: dấu X -->
                    <TextBlock Text="✖" FontSize="14" Margin="0,0,6,0" VerticalAlignment="Center"/>
                    <TextBlock Text="Cancel" VerticalAlignment="Center"/>
                </StackPanel>
            </Button>

            <!-- Apply button -->
            <Button Style="{StaticResource OkButton}"
            Width="120"
            Command="{Binding ApplyCommand}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!-- Icon: dấu tick -->
                    <TextBlock Text="✔" FontSize="14" Margin="0,0,6,0" VerticalAlignment="Center"/>
                    <TextBlock Text="Apply" VerticalAlignment="Center"/>
                </StackPanel>

                <!-- Animation trigger -->
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                         To="0.7"
                                         Duration="{StaticResource AnimationDuration}"
                                         AutoReverse="True"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Button.Triggers>
            </Button>

        </StackPanel>
    </Grid>






</Window>