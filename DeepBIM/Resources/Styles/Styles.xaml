<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!-- === COLORS === -->
    <SolidColorBrush x:Key="Accent" Color="#3FDCCB"/>
    <SolidColorBrush x:Key="AccentDark" Color="#2FB3A5"/>
    <SolidColorBrush x:Key="AccentLight" Color="#E6FCFA"/>
    <SolidColorBrush x:Key="Primary" Color="#007ACC"/>
    <SolidColorBrush x:Key="Secondary" Color="#FF6B35"/>
    <SolidColorBrush x:Key="Danger" Color="#D9534F"/>
    <SolidColorBrush x:Key="Warning" Color="#F0AD4E"/>
    <SolidColorBrush x:Key="Success" Color="#5CB85C"/>
    <SolidColorBrush x:Key="GrayLight" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="Gray" Color="#CCCCCC"/>
    <SolidColorBrush x:Key="GrayDark" Color="#6C757D"/>
    <SolidColorBrush x:Key="CardBorder" Color="#D6F5F2"/>
    <SolidColorBrush x:Key="Border" Color="#E0E0E0"/>
    <SolidColorBrush x:Key="TextPrimary" Color="#212121"/>
    <SolidColorBrush x:Key="TextSecondary" Color="#666666"/>
    <SolidColorBrush x:Key="Placeholder" Color="#9A9A9A"/>


<!-- === Brushes === -->
<SolidColorBrush x:Key="ShadcnPrimaryBg" Color="#3FDCCB"/>
<SolidColorBrush x:Key="ShadcnPrimaryBorder" Color="#2FB3A5"/>
<SolidColorBrush x:Key="ShadcnPrimaryHoverBg" Color="#2FB3A5"/>
<SolidColorBrush x:Key="ShadcnOnPrimary" Color="#FFFFFF"/>

<SolidColorBrush x:Key="ShadcnSecondaryBg" Color="#F4F4F5"/>
<SolidColorBrush x:Key="ShadcnSecondaryBorder" Color="#D4D4D4"/>
<SolidColorBrush x:Key="ShadcnSecondaryText" Color="#71717A"/>
<SolidColorBrush x:Key="ShadcnSecondaryHoverBg" Color="#E4E4E7"/>

<SolidColorBrush x:Key="ShadcnDangerBg" Color="#EF4444"/>
<SolidColorBrush x:Key="ShadcnDangerBorder" Color="#DC2626"/>
<SolidColorBrush x:Key="ShadcnDangerHoverBg" Color="#DC2626"/>

<SolidColorBrush x:Key="ShadcnDisabledBg" Color="#E5E7EB"/>
<SolidColorBrush x:Key="ShadcnDisabledBorder" Color="#E5E7EB"/>
<SolidColorBrush x:Key="ShadcnDisabledText" Color="#9CA3AF"/>

<SolidColorBrush x:Key="ShadcnFocusRing" Color="#9CF1E8"/>

<!-- === Colors (để Storyboard ColorAnimation dùng StaticResource) === -->
<Color x:Key="ShadcnPrimaryColor">#3FDCCB</Color>
<Color x:Key="ShadcnPrimaryHoverColor">#2FB3A5</Color>

<Color x:Key="ShadcnSecondaryColor">#F4F4F5</Color>
<Color x:Key="ShadcnSecondaryHoverColor">#E4E4E7</Color>

<Color x:Key="ShadcnDangerColor">#EF4444</Color>
<Color x:Key="ShadcnDangerHoverColor">#DC2626</Color>

<Color x:Key="ShadcnDisabledColor">#E5E7EB</Color>
<Color x:Key="ShadcnFocusRingColor">#9CF1E8</Color>



    <!-- === FONTS === -->
    <FontFamily x:Key="FontMain">Segoe UI</FontFamily>
    <sys:Double x:Key="FontSizeSmall">12</sys:Double>
    <sys:Double x:Key="FontSizeNormal">13</sys:Double>
    <sys:Double x:Key="FontSizeLarge">15</sys:Double>
    <Thickness x:Key="DefaultPadding">8</Thickness>

    <!-- === CARD & CONTAINER === -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CardBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.1" BlurRadius="6" Direction="315" ShadowDepth="1"/>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="HeaderBar" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Accent}"/>
        <Setter Property="CornerRadius" Value="6,6,0,0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Height" Value="40"/>
    </Style>

    <!-- === TEXTBLOCK === -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontMain}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
    </Style>

    <Style x:Key="TextHeader" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="{StaticResource FontSizeLarge}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

    <Style x:Key="TextSubHeader" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeSmall}"/>
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>

    <!-- === TEXTBOX === -->
    <Style x:Key="OutlinedTextBox" TargetType="TextBox">
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="CaretBrush" Value="{StaticResource Accent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                            <TextBlock Margin="10,0,0,0"
                                       Foreground="{StaticResource Placeholder}"
                                       VerticalAlignment="Center"
                                       IsHitTestVisible="False"
                                       Text="{TemplateBinding Tag}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value=""/>
                                                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Accent}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentDark}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UnderlineTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#A6EDE6"/>
        <Setter Property="Padding" Value="0,2,0,6"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="CaretBrush" Value="{StaticResource Accent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                            <TextBlock Margin="0,0,0,6" Foreground="{StaticResource Placeholder}" IsHitTestVisible="False" Text="{TemplateBinding Tag}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value=""/>
                                                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}" Value="False"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Accent}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentDark}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- === BUTTONS === -->
    <Style x:Key="BaseActionButton" TargetType="Button">
        <Setter Property="Height" Value="36"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Margin" Value="4,6,4,6"/>
        <Setter Property="Padding" Value="16,6"/>
        <Setter Property="FontFamily" Value="{StaticResource FontMain}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>









    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource BaseActionButton}">
        <Setter Property="Background" Value="{StaticResource ShadcnPrimaryBg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ShadcnPrimaryBorder}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" x:Name="scaleTransform"/>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ShadcnPrimaryHoverColor}"
                                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1.02"
                                                     Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1.02"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ShadcnPrimaryColor}"
                                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1"
                                                     Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource BaseActionButton}">
        <Setter Property="Background" Value="{StaticResource ShadcnSecondaryBg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ShadcnSecondaryBorder}"/>
        <Setter Property="Foreground" Value="{StaticResource ShadcnSecondaryText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" x:Name="scaleTransform"/>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ShadcnSecondaryHoverColor}"
                                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1.02"
                                                     Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1.02"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ShadcnSecondaryColor}"
                                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1"
                                                     Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButton" TargetType="Button" BasedOn="{StaticResource BaseActionButton}">
        <Setter Property="Background" Value="{StaticResource ShadcnDangerBg}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ShadcnDangerBorder}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" x:Name="scaleTransform"/>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ShadcnDangerHoverColor}"
                                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1.02"
                                                     Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1.02"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ShadcnDangerColor}"
                                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1"
                                                     Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OkButton" TargetType="Button" BasedOn="{StaticResource PrimaryButton}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect 
    Color="{Binding Color, Source={StaticResource ShadcnPrimaryBg}}" 
    Opacity="0.3" 
    BlurRadius="4" 
    Direction="315" 
    ShadowDepth="1"/>


            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4"
                        Padding="{TemplateBinding Padding}">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" x:Name="scaleTransform"/>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ShadcnPrimaryHoverColor}"
                                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1.02"
                                                     Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1.02"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="{StaticResource ShadcnPrimaryColor}"
                                                    Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleX"
                                                     To="1"
                                                     Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="1"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>















    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,6"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource Accent}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource AccentDark}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            CornerRadius="20"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FullWidthButton" TargetType="Button" BasedOn="{StaticResource BaseActionButton}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0,6"/>
    </Style>




    <!-- === COMBOBOX === -->
    <!-- Style OutlinedComboBox -->
    <Style x:Key="OutlinedComboBox" TargetType="ComboBox">
        <Setter Property="BorderBrush" Value="#CCC"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- Nền -->
                        <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                            <Grid>
                                <ToggleButton Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButton}"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>
                                <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="3,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left" />
                            </Grid>
                        </Border>
                        <Popup Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                    Background="White"
                                    BorderBrush="#CCC"
                                    BorderThickness="1"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#3FDCCB"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#3FDCCB"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#EEE"/>
                            <Setter Property="Foreground" Value="#888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Height" Value="32"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="toggleButton"
                                      Grid.Column="2"
                                      Focusable="False"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="20"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="border"
                                                Grid.ColumnSpan="2"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="4"
                                                Padding="{TemplateBinding Padding}"/>
                                        <Path x:Name="arrow"
                                              Grid.Column="1"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M 0 0 L 4 4 L 8 0 Z"
                                              Fill="{StaticResource AccentDark}"
                                              Margin="3"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Accent}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource Accent}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="6,3,30,3"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Margin="3,3,23,3"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Focusable="True"
                                 Visibility="Hidden"
                                 Background="Transparent"
                                 Foreground="{StaticResource TextPrimary}"/>
                        <Popup x:Name="popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border x:Name="DropDownBorder"
                                    Background="White"
                                    BorderBrush="{StaticResource Border}"
                                    BorderThickness="1"
                                    CornerRadius="6">
                                <ScrollViewer MaxHeight="200">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="MinHeight" Value="110"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource GrayDark}"/>
                            <Setter Property="Background" Value="{StaticResource GrayLight}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- === DATAGRID === -->
    <Style TargetType="DataGrid">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="AlternatingRowBackground" Value="#F8FDFC"/>
        <Setter Property="RowHeight" Value="26"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource FontMain}"/>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#F0F0F0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="10,4"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="AlternationIndex" Value="1">
                <Setter Property="Background" Value="#F8FDFC"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentLight}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Accent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- === GROUPBOX === -->
    <Style TargetType="GroupBox">
        <Setter Property="Margin" Value="0,0,0,15"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontWeight="SemiBold" Foreground="{StaticResource TextPrimary}" FontSize="14"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- === CHECKBOX === -->
    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="0,4"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
    </Style>

    <!-- === TABCONTROL === -->
    <Style TargetType="TabControl">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Margin" Value="0,0,2,0"/>
        <Setter Property="Background" Value="#F0F0F0"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource Border}"
                            BorderThickness="1,1,1,0"
                            CornerRadius="4,4,0,0"
                            Padding="10,5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Accent}"/>
                            <Setter TargetName="border"  Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>